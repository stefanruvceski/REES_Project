///////////////////////////////////////////////////////////
//  WeatherJobServerProvider.cs
//  Implementation of the Class WeatherJobServerProvider
//  Generated by Enterprise Architect
//  Created on:      16-maj-2018 10.31.24
//  Original author: Stefan
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using WeatherCommon.Classes;
using System.Diagnostics;

namespace WeatherWorkerRole.Classes
{
	public class WeatherJobServerProvider : IWeather
    {
        private static Dictionary<string, WindGenerator> WindGenerators = new Dictionary<string, WindGenerator>()
        {
            {"Novi Sad", new WindGenerator(0.35, 10000000, 50, new Weather(), 18, 10,10, new Aggregate()) }
        };

    public WeatherJobServerProvider(){

		}

		~WeatherJobServerProvider(){

		}

        public void SendWeatherState(Weather weather)
        {
            if(WindGenerators.ContainsKey(weather.City))
            {
                WindGenerators[weather.City].Weather = weather;
                Trace.WriteLine(weather);
            }
            
        }

        public WindGenerator GetWeather() // ne treba da vraca weather nego windgenerator
        {
            WindGenerator retVal = null;

            foreach(WindGenerator item in WindGenerators.Values)
            {
                retVal = item;
                break;
            }

            return retVal;
        }

    }//end WeatherJobServerProvider

}//end namespace WeatherWorkerRole